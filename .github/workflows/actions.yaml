name: Angular 12 Build
on:
  push:
    branches:
      - main
      - actions-pipeline
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Install Angular CLI
      run: npm install -g @angular/cli@12

    - name: Install Dependencies
      run: npm i --prefix ./Frontend

    - name: Interpolate environment variables
      shell: bash
      id: interpolate
      run: |
         pwd
         ls -la
         cd /home/runner/work/FoodOrderingApp/FoodOrderingApp/Frontend
         ls -la

    - name: Build
      run: npm run build-dev --prefix /home/runner/work/FoodOrderingApp/FoodOrderingApp/Frontend

    - name: Archive Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

    - name: Interpolate environment variables
      shell: bash
      id: interp
      run: |
         pwd
         ls -la
         cd /home/runner/work/FoodOrderingApp/FoodOrderingApp/Frontend/dist/food-ordering-app
         ls -la

    - id: install-aws-cli
      uses: unfor19/install-aws-cli-action@v1.0.3
      with:
        version: 2
        verbose: false

    - name: Install AWS CLI
      run: |
        sudo apt-get update && \
        sudo apt-get install -y python3-pip && \
        pip3 install awscli

    - name: Deploy to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        S3_BUCKET_NAME: my-s3-bucket
     run: |
       #aws s3 sync dist s3://${{ env.S3_BUCKET_NAME }} --delete --cache-control max-age=31536000,public
       aws s3 sync dist s3://fe-angular-orderingapp --delete --cache-control max-age=31536000,public

    - name: Invalidate CloudFront Cache
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        CLOUDFRONT_DISTRIBUTION_ID: E1TYUO4EA9KMOE
      run: |
        #aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
        aws cloudfront create-invalidation --distribution-id E1TYUO4EA9KMOE --paths '/*'

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 1.0.0
    #
    # - name: ANGULAR:FE:DEPLOYMENT
    #   shell: bash
    #   run: |
    #     cd infrastructure
    #     terraform -v
    #     terraform init
    #     ls -la
    #
    #     export TF_VAR_bucket_name="fe-angular-orderingapp"
    #     export TF_VAR_access_key="${{ secrets.AWS_ACCESS_KEY_ID }}"
    #     export TF_VAR_secret_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
    #     export TF_VAR_aws_region="ap-south-1"
    #     export TF_VAR_dist_source_path="/home/runner/work/FoodOrderingApp/FoodOrderingApp/Frontend/dist/"
    #
    #     terraform plan
    #     terraform apply -auto-approve
