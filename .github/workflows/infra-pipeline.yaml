name: ANGULAR:FE:INFRASTRUCTURE
on:
  push:
    branches:
      - main
      - infra-pipeline


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Interpolation
        shell: bash
        run: |
          rm -rf ~/.aws/credentials
          rm -rf ~/.aws/config
          unset AWS_ACCESS_KEY_ID
          unset AWS_SECRET_ACCESS_KEY
          unset AWS_SESSION_TOKEN

          aws sts assume-role --role-arn "${{ inputs.aws_role }}" --role-session-name automation > assume_role

          export AWS_ACCESS_KEY_ID=$(cat assume_role |  grep "AccessKeyId" | cut -d ":" -f 2 | sed -e 's/"//g' | sed -e 's/,//g' | sed -e 's/ //g')
          export AWS_SECRET_ACCESS_KEY=$(cat assume_role |  grep "SecretAccessKey" | cut -d ":" -f 2 | sed -e 's/"//g' | sed -e 's/,//g' | sed -e 's/ //g')
          export AWS_SESSION_TOKEN=$(cat assume_role |  grep "SessionToken" | cut -d ":" -f 2 | sed -e 's/"//g' | sed -e 's/,//g' | sed -e 's/ //g')

          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> ${GITHUB_ENV}
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> ${GITHUB_ENV}
          echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> ${GITHUB_ENV}

          echo ::add-mask::${CODEARTIFACT_TOKEN}
          echo ::add-mask::${AWS_ACCESS_KEY_ID}
          echo ::add-mask::${AWS_SECRET_ACCESS_KEY}
          echo ::add-mask::${AWS_SESSION_TOKEN}

          mkdir -p ~/.aws/

          echo "[default-login]" > ~/.aws/credentials
          echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
          echo "aws_session_token = ${AWS_SESSION_TOKEN}" >> ~/.aws/credentials
          echo "region = us-east-1" >> ~/.aws/credentials

          echo "[profile default]" > ~/.aws/config
          echo "role_arn = ${{ inputs.aws_role }}" >> ~/.aws/config
          echo "region = us-east-1" >> ~/.aws/config
          echo "output = json" >> ~/.aws/config
          echo "source_profile = default-login" >> ~/.aws/config

      - name: Configure AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "us-east-1"
          role-to-assume: "arn:aws:iam::475879525909:role/terraform-fe-role"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        run: terraform init ./infrastructure

      - name: Plan Terraform
        run: terraform plan ./infrastructure

      - name: Apply Terraform
        run: terraform apply ./infrastructure
        env:
          TF_VAR_bucket_name: fe-angular
          TF_VAR_deployment_role: arn:aws:iam::475879525909:role/terraform-fe-role
